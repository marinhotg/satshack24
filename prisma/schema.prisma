generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  senha         String   
  name          String
  nodeId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  totalPaid     Int      @default(0)
  averageRating Float    @default(0)
  reservedBills Bill[]   @relation("ReservedBills")
  uploadedBills Bill[]   @relation("UploadedBills")
  ratings       Rating[] @relation("UserRatings")
}

model Bill {
  id            Int       @id @default(autoincrement())
  amount        Float
  dueDate       DateTime
  status        String
  bonusRate     Float
  currency      String  
  fileUrl       String?
  filePathname  String?
  fileUploadedAt DateTime?
  receiptUrl    String?
  receiptPathname String?
  receiptUploadedAt DateTime?
  uploadedBy    Int
  reservedBy    Int?
  reservedUntil DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  paidAt        DateTime?
  reserver      User?     @relation("ReservedBills", fields: [reservedBy], references: [id])
  uploader      User      @relation("UploadedBills", fields: [uploadedBy], references: [id])
  rating        Rating?

  @@index([status])
  @@index([uploadedBy])
  @@index([reservedBy])
}

model Rating {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  billId    Int      @unique
  raterId   Int
  createdAt DateTime @default(now())
  rater     User     @relation("UserRatings", fields: [raterId], references: [id])
  bill      Bill     @relation(fields: [billId], references: [id])

  @@index([raterId])
}
